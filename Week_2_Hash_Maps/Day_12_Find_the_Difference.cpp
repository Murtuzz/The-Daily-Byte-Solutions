/**
  * This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters. t is generated by shuffling the letters in s as well as potentially adding an additional random character. Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
  * Note: You may assume that at most one additional character can be added to t.
  *
  * Ex: Given the following strings...
  *
  * s = "foobar", t = "barfoot", return 't'
  * s = "ide", t = "idea", return 'a'
  * s = "coding", t "ingcod", return ''
  */


// Question: https://leetcode.com/problems/find-the-difference/
// Solution:

#include <iostream>

using namespace std;

#pragma GCC optimize("fast")
static auto _ = [] () {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();

char findTheDifference(string &s, string &t) {
      char lowerChar [26] = {0};

      int len_s = s.length();
      int len_t = t.length();

      for(int i = 0; i < len_s; i++){
          lowerChar[s[i] - 'a']++;
      }

      for(int i = 0; i < len_t; i++){
          lowerChar[t[i] - 'a']--;
      }

      for(int i = 0; i < 26; i++){
          if(lowerChar[i])
              return ('a' + i);
      }


      return ' ';
}

int main() {
  string s, t;
  cin >> s >> t;
  cout << findTheDifference(s, t);
  cout << endl;
}
